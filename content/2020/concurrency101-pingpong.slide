# Konkuren Ping-Pong
Implementasi Konkurensi Sambil Bermain Ping-Pong
Summary: Demonstrating a concurrency via ping-pong game
Tags: concurrency, pingpong

Imre Nagi
Cloud Platform Engineer, Gojek
24 Nov 2020
https://golang-talks.imrenagi.com
@imrenagi

## Ping-pong Sederhana

Buat sebuah aplikasi sederhana dengan kriteria:

* 2 pemain ping-pong saling mengembalikan bola
* Permainan berhenti setelah 1 detik
* Gunakan konkurensi dengan 1 channel

## Ping-pong Sederhana (Solusi)

.play concurrency101-pingpong/naive/main.go /START/,/STOP/

.link https://talks.golang.org/2013/advconc.slide#6 source

## Ping-pong Dengan Wasit

Dengan solusi sebelumnya, tambahkan fitur:

* Goroutine untuk Referree/Wasit
* Wasit akan mengambil bola ketika salah satu pemain tidak dapat mengembalikan bola ke lawan
* Permainan selesai, wasit menentukan pemenang.

## Ping-pong Dengan Wasit (Solusi)

Menambakan `lastPlayer` untuk menentukan siapa yang terakhir kali berhasil mengembalikan bola

.code concurrency101-pingpong/referree/main.go /STARTBALL/,/STOPBALL/ HL3

## Ping-pong Dengan Wasit (Solusi Cont'd)

.code concurrency101-pingpong/referree/main.go /STARTPLAYER/,/STOPPLAYER/ HL1

## Ping-pong Dengan Wasit (Solusi Cont'd)

`referree` mengakhiri goroutinenya ketika menerima bola di _channel_ `done`

.code concurrency101-pingpong/referree/main.go /STARTREFERREE/,/STOPREFERREE/ HL2

## Ping-pong Dengan Wasit (Solusi Cont'd)

Penambahan _channel_ `done` untuk menandai akhir sebuah ronde

.play concurrency101-pingpong/referree/main.go /STARTMAIN/,/STOPMAIN/

## Multi Round Ping-Pong

Tambahan fitur:
* Hanya referree yang bisa memulai permainan
* Satu game penuh berakhir setelah salah satu pemain mencapai skor target (misal: 5)
* Referree, Player, dan Game berjalan di goroutine masing-masing.`

## Refactor Player

Membuat _type_  `Player` 

.code concurrency101-pingpong/game/main.go /STARTPLAYER/,/STOPPLAYER/ HL3

Fungsi untuk memberitahu _player_ untuk berhenti.

.code concurrency101-pingpong/game/main.go /STARTPLAYERDONE/,/STOPPLAYERDONE/ HL3

## Refactor Player (cont'd)

.code concurrency101-pingpong/game/main.go /STARTPLAYERPLAY/,/STOPPLAYERPLAY/ HL3

## Objek Game

Objek `Game` untuk menyimpan _state_ dari sebuah permainan

.code concurrency101-pingpong/game/main.go /STARTGAMESTRUCT/,/STOPGAMESTRUCT/ HL3

## Game Loop

`Game` loop mengecek apakah permainan sudah berakhir lalu menginfokan kepada pemain 
untuk berhenti.

.code concurrency101-pingpong/game/main.go /STARTGAMELOOP/,/STOPGAMELOOP/ HL3

.code concurrency101-pingpong/game/main.go /STARTNEWGAME/,/STOPNEWGAME/ HL3

## Starting Game

Fungsi `Start` memulai goroutine untuk masing-masing `player`.

.code concurrency101-pingpong/game/main.go /STARTGAMESTART/,/STOPGAMESTART/ HL3

`done` _channel_ digunakan untuk memberitahu `referree` bahwa pemain gagal mengembalikan bola.


## Incrementing Score

Skor permainan harus diproteksi dari kemungkinan _race condition_ dengan `sync.Mutex`

.code concurrency101-pingpong/game/main.go /STARTGAMEINCSCORE/,/STOPGAMEINCSCORE/ HL3


## Referree

**Hanya referree yang dapat memulai sebuah permainan.**

.code concurrency101-pingpong/game/main.go /STARTREFERREESTART/,/STOPREFERREESTART/ HL3

## Fungsi Main



.play concurrency101-pingpong/game/main.go /STARTMAIN/,/STOPMAIN/ HL3